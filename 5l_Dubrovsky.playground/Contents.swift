import UIKit

/*
 1. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª –∏ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –æ–±—â–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è.
 2. –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ ¬´Car¬ª –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –Ω–∏—Ö –º–µ—Ç–æ–¥—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å
 –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º: –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ, –∑–∞–ø—É—Å—Ç–∏—Ç—å/–∑–∞–≥–ª—É—à–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –∏ —Ç.–¥. (–ø–æ –æ–¥–Ω–æ–º—É –º–µ—Ç–æ–¥—É
 –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ª–µ–¥—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –¥–µ–π—Å—Ç–≤–∏—è, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–±—â–∞—è –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π).
 3. –°–æ–∑–¥–∞—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª - trunkCar –∏ sport–°ar. –û–ø–∏—Å–∞—Ç—å –≤ –Ω–∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞,
 –æ—Ç–ª–∏—á–∞—é—â–∏–µ—Å—è –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ —Ü–∏—Å—Ç–µ—Ä–Ω—ã.
 4. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–µ–µ –ø—Ä–æ—Ç–æ–∫–æ–ª CustomStringConvertible.
 5. –°–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –Ω–∏–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
 6. –í—ã–≤–µ—Å—Ç–∏ —Å–∞–º–∏ –æ–±—ä–µ–∫—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª—å. */






// MARK: –ù–ï–û–ë–•–û–î–ò–ú–´–ï –ü–ï–†–ï–ß–ò–°–õ–ï–ù–ò–Ø

enum ChoiceOfDoorsAndWindows {
    case door, window
}

enum StatusDoorOrWindow: String {
    case open = "–æ—Ç–∫—Ä—ã—Ç—ã"
    case close = "–∑–∞–∫—Ä—ã—Ç—ã"
}

enum StatusEngine: String {
    case start = "–∑–∞–≤–µ–¥–µ–Ω"
    case stop = "–∑–∞–≥–ª—É—à–µ–Ω"
}

enum TypeEngine: String {
    case petrol = "–±–µ–Ω–∑–∏–Ω–æ–≤—ã–π"
    case diesel = "–¥–∏–∑–µ–ª—å–Ω—ã–π"
    case electrical = "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π"
    case gas = "–≥–∞–∑–æ–≤—ã–π"
}

enum TypeTransmission: String {
    case manual = "—Ä—É—á–Ω–∞—è"
    case auto = "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è"
}

extension UIColor {
    var name: String? {
        switch self {
        case UIColor.black: return "—á–µ—Ä–Ω—ã–π"
        case UIColor.darkGray: return "—Ç–µ–º–Ω–æ-—Å–µ—Ä—ã–π"
        case UIColor.lightGray: return "—Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π"
        case UIColor.white: return "–±–µ–ª—ã–π"
        case UIColor.gray: return "—Å–µ—Ä—ã–π"
        case UIColor.red: return "–∫—Ä–∞—Å–Ω—ã–π"
        case UIColor.green: return "–∑–µ–ª–µ–Ω—ã–π"
        case UIColor.blue: return "–≥–æ–ª—É–±–æ–π"
        case UIColor.yellow: return "–∂–µ–ª—Ç—ã–π"
        case UIColor.orange: return "–æ—Ä–∞–Ω–∂–µ–≤—ã–π"
        case UIColor.brown: return "—Å–µ—Ä—ã–π"
        case UIColor.red: return "–∫—Ä–∞—Å–Ω—ã–π"
        default: return nil
        }
    }
}






// MARK: –ü–†–û–¢–û–ö–û–õ –ê–í–¢–û–ú–û–ë–ò–õ–Ø

protocol CarProtocol: AnyObject {
    var brand: String {get}
    var model: String {get}
    var engine: TypeEngine {get}
    var transmission: TypeTransmission {get}
    
    var color: UIColor {get set}
    var radio: Bool {get set}
    var mileage: Double {get set}
    var statusDoor: StatusDoorOrWindow {get set}
    var statusWindow: StatusDoorOrWindow {get set}
    var statusEngine: StatusEngine {get set}
    
    static var carCount: Int {get set}
    
    func changeStatusEngine()
    func changeStatusDoorAndWindow(whatToChange: ChoiceOfDoorsAndWindows)
    func driveCertainDistance(distance: Double) -> Double
}






// MARK: –†–ê–°–®–ò–†–ï–ù–ò–ï –ü–†–û–¢–û–ö–û–õ–ê CAR

extension CarProtocol {
    
    // –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∑–∞–≤–µ—Å—Ç–∏ –∏–ª–∏ –∑–∞–≥–ª—É—à–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å.
    func changeStatusEngine() {
        self.statusEngine = self.statusEngine == .stop ? .start : .stop
        print(self.statusEngine == .stop ? "üöô –î–≤–∏–≥–∞—Ç–µ–ª—å \(self.brand) \(self.model) –∑–∞–≥–ª—É—à—ë–Ω.\n" : "üöô –î–≤–∏–≥–∞—Ç–µ–ª—å \(self.brand) \(self.model) –∑–∞–≤–µ–¥—ë–Ω.\n")
    }
    
    // –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–µ–π –∏–ª–∏ –æ–∫–æ–Ω.
    func changeStatusDoorAndWindow(whatToChange: ChoiceOfDoorsAndWindows) {
        switch whatToChange {
        case .door:
            self.statusDoor = self.statusDoor == .open ? .close : .open
            print("üöô –°—Ç—É—Ç—É—Å –¥–≤–µ—Ä–µ–π –∏–∑–º–µ–Ω–∏–ª—Å—è, —Ç–µ–ø–µ—Ä—å –æ–Ω–∏: \(self.statusDoor.rawValue).\n")
        case .window:
            self.statusWindow = self.statusWindow == .open ? .close : .open
            print("üöô –°—Ç—É—Ç—É—Å –æ–∫–æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è, —Ç–µ–ø–µ—Ä—å –æ–Ω–∏: \(self.statusWindow.rawValue).\n")
        }
    }
    
    // –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–µ–π –∏–ª–∏ –æ–∫–æ–Ω.
    func driveCertainDistance(distance: Double) -> Double {
        guard distance > 0 else {
            print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –ø–æ–µ—Ö–∞–ª, —Ç.–∫. –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–µ—Ö–∞—Ç—å –Ω—É–ª–µ–≤—É—é –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é.\n")
            return self.mileage
        }
        self.mileage += distance
        print("üöô –ê–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–æ–µ—Ö–∞–ª \(distance) –∫–º., –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–±–µ–≥ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç \(self.mileage) –∫–º.\n")
        return self.mileage
    }
}






// MARK: –ö–õ–ê–°–° –°–ü–û–†–¢–ò–í–ù–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø

class SportCar: CarProtocol {
    
    // –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ.
    enum TypeBodyCar: String {
        case sedan = "—Å–µ–¥–∞–Ω"
        case coupe = "–∫—É–ø–µ"
        case hatchback = "—Ö–µ—Ç—á–±—ç–∫"
        case crossover = "–∫—Ä–æ—Å—Å–æ–≤–µ—Ä"
        case sportCar = "—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π"
    }
    
    let brand: String
    let model: String
    let engine: TypeEngine
    let transmission: TypeTransmission
    var color: UIColor
    var radio: Bool
    var mileage: Double
    var statusDoor: StatusDoorOrWindow
    var statusWindow: StatusDoorOrWindow
    var statusEngine: StatusEngine
    
    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
    let typeBody: TypeBodyCar
    let roofHatch: Bool
    private var tunning: Bool
    
    // C–≤-–≤–æ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ —Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ–≥–∫–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∞–≤—Ç–æ-—Å–∞–ª–æ–Ω–µ.
    static var carCount: Int = 0
    
    // –î–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, –≤ –Ω–µ–º –º—ã —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–∞–ª–æ–Ω–µ, –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏.
    deinit {
        print("üöô –õ–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å \(brand) \(model) –ø—Ä–æ–¥–∞–Ω. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ \(SportCar.carCount - 1) –ª–µ–≥–∫–æ–≤—ã—Ö –º–∞—à–∏–Ω.\n")
        return SportCar.carCount -= 1
    }
    
    init(brand: String, model: String, engine: TypeEngine, transmission: TypeTransmission, color: UIColor, radio: Bool, mileage: Double, typeBody: TypeBodyCar, roofHatch: Bool, tunning: Bool, statusDoor: StatusDoorOrWindow, statusWindow: StatusDoorOrWindow, statusEngine: StatusEngine) {
        guard mileage >= 0 else { fatalError("üëâ –í–Ω–∏–º–∞–Ω–∏–µ! –û—à–∏–±–∫–∞! –ü—Ä–æ–±–µ–≥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0.") }
        self.brand = brand
        self.model = model
        self.engine = engine
        self.transmission = transmission
        self.color = color
        self.radio = radio
        self.mileage = mileage
        self.typeBody = typeBody
        self.roofHatch = roofHatch
        self.tunning = tunning
        self.statusDoor = statusDoor
        self.statusWindow = statusWindow
        self.statusEngine = statusEngine
        
        // –†–∞—Å—Å—á–µ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.
        SportCar.carCount += 1
        print("üöô –õ–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å \(brand) \(model) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω. –¢–µ–ø–µ—Ä—å –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ \(SportCar.carCount) –ª–µ–≥–∫–æ–≤—ã—Ö –º–∞—à–∏–Ω.\n")
    }
    
    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å —Ç—é–Ω–∏–Ω–≥.
    func changeTunning() {
        self.tunning = self.tunning ? false : true
        print(self.tunning ? "üöô –ù–∞ –º–∞—à–∏–Ω—É \(self.brand) \(self.model) –¥–æ–±–∞–≤–ª–µ–Ω —Ç—é–Ω–∏–Ω–≥.\n" : "üöô –° –º–∞—à–∏–Ω—ã \(self.brand) \(self.model) —É–±—Ä–∞–Ω —Ç—é–Ω–∏–Ω–≥.\n")
    }
}






// MARK: –†–ê–°–®–ò–†–ï–ù–ò–ï –ö–õ–ê–°–°–ê –õ–ï–ì–ö–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø (–ò–º–ø–ª–µ—Ç–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ - "CustomStringConvertible")

extension SportCar: CustomStringConvertible {
    var description: String {
        return "–ë—Ä–µ–Ω–¥: \(brand), –º–æ–¥–µ–ª—å: \(model)\n–¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è: \(engine.rawValue)\n–¢–∏–ø –∫—É–∑–æ–≤–∞: \(typeBody.rawValue)\n–¢–∏–ø —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏: \(transmission.rawValue)\n–¶–≤–µ—Ç –∫—É–∑–æ–≤–∞: \((color.name != nil) ? color.name! : "üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!–í–≤–µ–¥—ë–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ü–≤–µ—Ç.")\n–†–∞–¥–∏–æ: \(radio ? "–∏–º–µ–µ—Ç—Å—è" : "–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç")\n–ü—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: \(mileage) –∫–º.\n–î–≤–µ—Ä–∏: \(statusDoor.rawValue)\n–û–∫–Ω–∞: \(statusWindow.rawValue)\n–î–≤–∏–≥–∞—Ç–µ–ª—å: \(statusEngine.rawValue)\n–õ—é–∫: \(roofHatch ? "–∏–º–µ–µ—Ç—Å—è" : "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")\n–¢—é–Ω–∏–Ω–≥: \(tunning ? "–∏–º–µ–µ—Ç—Å—è" : "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")\n"
    }
}






// MARK: –ö–õ–ê–°–° –ì–†–£–ó–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø

class TruckCar: CarProtocol {
    
    // –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–∑–æ–≤–æ–≥–æ –∞–≤—Ç–æ.
    enum ActionWithTheTrunk {
        case put, remove
    }
    
    let brand: String
    let model: String
    let engine: TypeEngine
    let transmission: TypeTransmission
    var color: UIColor
    var radio: Bool
    var mileage: Double
    var statusDoor: StatusDoorOrWindow
    var statusWindow: StatusDoorOrWindow
    var statusEngine: StatusEngine
    
    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≥—Ä—É–∑–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
    let volumeTrunk: Double
    private var nowInTheTrunk: Double = 0.0
    
    // C–≤-–≤–æ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ —Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–∑–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∞–≤—Ç–æ-—Å–∞–ª–æ–Ω–µ.
    static var carCount: Int = 0
    
    // –î–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, –≤ –Ω–µ–º –º—ã —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–∞–ª–æ–Ω–µ, –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏.
    deinit {
        print("üöö –ì—Ä—É–∑–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å \(brand) \(model) –ø—Ä–æ–¥–∞–Ω. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ \(TruckCar.carCount - 1) –≥—Ä—É–∑–æ–≤—ã—Ö –º–∞—à–∏–Ω.\n")
        return TruckCar.carCount -= 1
    }
    
    init(brand: String, model: String, engine: TypeEngine, transmission: TypeTransmission, color: UIColor, radio: Bool, mileage: Double, volumeTrunk: Double, nowInTheTrunk: Double, statusDoor: StatusDoorOrWindow, statusWindow: StatusDoorOrWindow, statusEngine: StatusEngine) {
        guard mileage >= 0 else { fatalError("üëâ –í–Ω–∏–º–∞–Ω–∏–µ! –û—à–∏–±–∫–∞! –ü—Ä–æ–±–µ–≥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0.") }
        guard volumeTrunk > 0 else { fatalError("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –±–∞–≥–∞–∂–Ω–∏–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ 0.") }
        guard volumeTrunk >= nowInTheTrunk else { fatalError("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –≥—Ä—É–∑, –≤–µ—Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –±–∞–≥–∞–∂–Ω–∏–∫–∞") }
        
        self.brand = brand
        self.model = model
        self.engine = engine
        self.transmission = transmission
        self.color = color
        self.radio = radio
        self.mileage = mileage
        self.volumeTrunk = volumeTrunk
        self.nowInTheTrunk = nowInTheTrunk
        self.statusDoor = statusDoor
        self.statusWindow = statusWindow
        self.statusEngine = statusEngine
        
        // –†–∞—Å—Å—á–µ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.
        TruckCar.carCount += 1
        print("üöö –ì—Ä—É–∑–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å \(brand) \(model) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω. –¢–µ–ø–µ—Ä—å –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ \(TruckCar.carCount) –≥—Ä—É–∑–æ–≤—ã—Ö –º–∞—à–∏–Ω.\n")
    }
    
    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –≥—Ä—É–∑–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª–æ–∂–∏—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å –∏–∑ –º–∞—à–∏–Ω—ã, –≥—Ä—É–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞.
    func putOrRemoveFromTheTrunk(action: ActionWithTheTrunk, cargo: Double) {
        switch action {
        case .put:
            switch cargo {
            case 0:
                print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –≥—Ä—É–∑ –≤–µ—Å–æ–º = 0 –∫–≥.\n")
            case ..<0:
                print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –≥—Ä—É–∑ –≤–µ—Å–æ–º < 0 –∫–≥.\n")
            case 1...:
                guard (self.nowInTheTrunk + cargo) < volumeTrunk else {
                    print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≥—Ä—É–∑ –≤–µ—Å–æ–º \(cargo) –∫–≥. –£ –≤–∞—Å –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ \(self.volumeTrunk - self.nowInTheTrunk) –∫–≥.!\n")
                    return
                }
                print("–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –≥—Ä—É–∑ –≤–µ—Å–æ–º \(cargo) –∫–≥. –°–µ–π—á–∞—Å –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ \(self.nowInTheTrunk + cargo)\n")
                self.nowInTheTrunk += cargo
            default:
                fatalError("–ü–æ–ø–∞–ª–æ –≤ default [put]")
            }
        case .remove:
            switch cargo {
            case 0:
                print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≥—Ä—É–∑ –≤–µ—Å–æ–º = 0 –∫–≥.\n")
            case ..<0:
                print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≥—Ä—É–∑ –≤–µ—Å–æ–º < 0 –∫–≥.\n")
            case 0.1...:
                guard (self.nowInTheTrunk - cargo) >= 0 else {
                    print("üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –≥—Ä—É–∑ –≤–µ—Å–æ–º \(cargo) –∫–≥. –£ –≤–∞—Å –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ –≤—Å–µ–≥–æ \(self.nowInTheTrunk) –∫–≥.!\n")
                    return
                }
                print("–í—ã —É–±—Ä–∞–ª–∏ –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≥—Ä—É–∑ –≤–µ—Å–æ–º \(cargo) –∫–≥. –°–µ–π—á–∞—Å –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ \(self.nowInTheTrunk - cargo) –∫–≥.\n")
                self.nowInTheTrunk -= cargo
            default:
                fatalError("–ü–æ–ø–∞–ª–æ –≤ default [remove]")
            }
        }
    }
}






// MARK: –†–ê–°–®–ò–†–ï–ù–ò–ï –ö–õ–ê–°–°–ê –ì–†–£–ó–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø (–ò–º–ø–ª–µ—Ç–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ - "CustomStringConvertible")

extension TruckCar: CustomStringConvertible {
    var description: String {
        "–ë—Ä–µ–Ω–¥: \(brand), –º–æ–¥–µ–ª—å: \(model)\n–¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è: \(engine.rawValue)\n–¢–∏–ø —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏: \(transmission.rawValue)\n–¶–≤–µ—Ç –∫—É–∑–æ–≤–∞: \((color.name != nil) ? color.name! : "üëâ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!–í–≤–µ–¥—ë–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ü–≤–µ—Ç.")\n–†–∞–¥–∏–æ: \(radio ? "–∏–º–µ–µ—Ç—Å—è" : "–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç")\n–ü—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: \(mileage) –∫–º.\n–î–≤–µ—Ä–∏: \(statusDoor.rawValue)\n–û–∫–Ω–∞: \(statusWindow.rawValue)\n–î–≤–∏–≥–∞—Ç–µ–ª—å: \(statusEngine.rawValue)\n–ö–æ–ª-–≤–æ –≤–º–µ—â–∞–µ–º–æ–≥–æ –≥—Ä—É–∑–∞: \(volumeTrunk) –∫–≥.\n–°–µ–π—á–∞—Å –≥—Ä—É–∑–∞ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ: \(nowInTheTrunk) –∫–≥.\n"
    }
}






// MARK: –ü–†–ò–ú–ï–†–´ –õ–ï–ì–ö–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø

// –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ–≥–∫–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–∞–ª–æ–Ω–µ.
print("–õ–µ–≥–∫–æ–≤—ã—Ö –º–∞—à–∏–Ω —Å–µ–π—á–∞—Å - \(SportCar.carCount).\n")
sleep(1)

// –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –ª–µ–≥–∫–æ–≤—É—é –º–∞—à–∏–Ω—É –≤ —Å–∞–ª–æ–Ω.
var ferrari: SportCar? = SportCar(brand: "Ferrari", model: "F1", engine: .petrol, transmission: .auto, color: .red, radio: false, mileage: 100.0, typeBody: .sportCar, roofHatch: true, tunning: false, statusDoor: .close, statusWindow: .close, statusEngine: .stop)
sleep(1)

// –í—ã–≤–µ–¥–µ–º –æ –Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
print(ferrari!.description)
sleep(1)

// –ß—Ç–æ–±—ã –µ—ë –ø—Ä–æ–¥–∞—Ç—å, –Ω—É–∂–Ω–æ –ø–æ–≤–µ—Å–∏—Ç—å –Ω–∞ –Ω–µ—ë —Ç—é–Ω–∏–Ω–≥
ferrari!.changeTunning()
sleep(1)

// –ü–æ–∫—É–ø–∞—Ç—å –Ω–∞—à–µ–ª—Å—è, –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –º–∞—à–∏–Ω—É –∏ –∑–∞–≤–µ—Å—Ç–∏ –µ—ë.
ferrari!.changeStatusDoorAndWindow(whatToChange: .door)
sleep(1)
ferrari!.changeStatusEngine()
sleep(2)

// –ü–æ–∫–∞ –≤–æ–¥–∏—Ç–µ–ª—å –æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç Ferrari, –≤ —Å–∞–ª–æ–Ω –ø—Ä–∏–±—ã–ª –Ω–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å.
var tesla: SportCar? = SportCar(brand: "Tesla", model: "Cybertruck", engine: .electrical, transmission: .auto, color: .black, radio: true, mileage: 20_000.0, typeBody: .crossover, roofHatch: false, tunning: false, statusDoor: .open, statusWindow: .open, statusEngine: .start)
sleep(1)

// –í—ã–≤–µ–¥–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.
print(tesla!.description)
sleep(1)

// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≤–µ—Å—Ç–∏ Tesla –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –º–µ—Å—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –¥–æ —Å–∞–ª–æ–Ω–∞ 7.2 –∫–º.
tesla!.driveCertainDistance(distance: 7.2)
sleep(1)

// –î–∞–≤–∞–π—Ç–µ –∑–∞–≥–ª—É—à–∏–º Tesla –∏ –∑–∞–∫—Ä–æ–µ–º —É –Ω–µ—ë –æ–∫–Ω–∞.
tesla!.changeStatusDoorAndWindow(whatToChange: .window)
sleep(1)
tesla!.changeStatusEngine()
sleep(1)

// –í–µ—Ä–Ω–µ–º—Å—è –∫ Ferrari, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –¥–æ–≤–æ–ª—å–Ω–æ –∏ –∑–∞–±–∏—Ä–∞–µ—Ç –µ—ë.
ferrari = nil
sleep(4)






// MARK: –ü–†–ò–ú–ï–†–´ –ì–†–£–ó–û–í–û–ì–û –ê–í–¢–û–ú–û–ë–ò–õ–Ø

// –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–∑–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–∞–ª–æ–Ω–µ.
print("–ì—Ä—É–∑–æ–≤—ã—Ö –º–∞—à–∏–Ω —Å–µ–π—á–∞—Å - \(TruckCar.carCount).\n")
sleep(1)

// –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –ª–µ–≥–∫–æ–≤—É—é –º–∞—à–∏–Ω—É –≤ —Å–∞–ª–æ–Ω.
var vaz = TruckCar(brand: "VAZ", model: "K5234", engine: .diesel, transmission: .manual, color: .white, radio: false, mileage: 52_000.0, volumeTrunk: 12_000, nowInTheTrunk: 3_670, statusDoor: .close, statusWindow: .open, statusEngine: .stop)
sleep(1)

// –í—ã–≤–µ–¥–µ–º –æ –Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
print(vaz.description)
sleep(1)

// –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª–æ–∂–∏—Ç—å –≤ –º–∞—à–∏–Ω—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥—Ä—É–∑.
 vaz.putOrRemoveFromTheTrunk(action: .put, cargo: 1_000)
 sleep(1)

 // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª–æ–∂–∏—Ç—å –≤ –º–∞—à–∏–Ω—É –≥—Ä—É–∑, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–π –µ—ë –≥—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å
 vaz.putOrRemoveFromTheTrunk(action: .put, cargo: 50_000)
 sleep(1)

 // –ü–æ–ø—Ä–æ–±—É–µ–º —É–±—Ä–∞—Ç—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≥—Ä—É–∑, –≤–µ—Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≥—Ä—É–∑
 vaz.putOrRemoveFromTheTrunk(action: .remove, cargo: 100_000)
 sleep(1)

 // –ü–æ–ø—Ä–æ–±—É–µ–º —É–±—Ä–∞—Ç—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≥—Ä—É–∑, –≤–µ—Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≥—Ä—É–∑
 vaz.putOrRemoveFromTheTrunk(action: .remove, cargo: 500)
 sleep(1)

 // –ü–æ—Ä–∞ –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–∞ –≤ –º–∞—à–∏–Ω–µ.
 vaz.changeStatusDoorAndWindow(whatToChange: .window)
 sleep(1)
